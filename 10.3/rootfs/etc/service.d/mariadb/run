#!/bin/sh

# set -e : Exit the script if any statement returns a non-true return value.
# set -u : Exit the script when using uninitialised variable.
set -eu

# Redirect STDERR to STDOUT
exec 2>&1

# Make environnement variables accessibles
[ -r /etc/envvars ] && . /etc/envvars

# Default values
export MYSQL_DATA_DIR=${MYSQL_DATA_DIR:='/var/lib/mysql/'}
export MYSQL_INSTALL_PARAMS=${MYSQL_INSTALL_PARAMS:=''}
export MYSQL_STARTCMD=${MYSQL_STARTCMD:='/usr/bin/mysqld'}
export MYSQL_STARTPARAMS=${MYSQL_STARTPARAMS:='--skip-host-cache --skip-name-resolve --debug-gdb'} #'--skip-networking --skip-name-resolve --debug-gdb'}
export MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD:=''}
export MYSQL_ALLOW_EMPTY_PASSWORD=${MYSQL_ALLOW_EMPTY_PASSWORD:=false}
export MYSQL_RANDOM_ROOT_PASSWORD=${MYSQL_RANDOM_ROOT_PASSWORD:=false}
export MYSQL_DATABASE=${MYSQL_DATABASE:=''}
export MYSQL_USER=${MYSQL_USER:=''}
export MYSQL_PASSWORD=${MYSQL_PASSWORD:=''}

# Generate MariaDb config file from template
[ -f ./cnf/setup ] && (chmod +x ./cnf/setup; ./cnf/setup)

# If the MYSQL_DATA_DIR doesn't exist, this mean
# that we perform the first install.
if [ -z "$(ls -A $MYSQL_DATA_DIR)" ]; then

    # First, check for root password
    if [ -z "$MYSQL_ROOT_PASSWORD" ] && [ "$MYSQL_RANDOM_ROOT_PASSWORD" = 'false' ] && [ "$MYSQL_ALLOW_EMPTY_PASSWORD" = 'false' ]; then
        echo >&2
        echo >&2 ''
        echo >&2 'Error: database is uninitialized and password option is not specified'
        echo >&2 'You need to specify one of MYSQL_ROOT_PASSWORD, MYSQL_RANDOM_ROOT_PASSWORD or MYSQL_ALLOW_EMPTY_PASSWORD'
        echo >&2 ''
        exit 1
    fi

    echo >&2 ''
    echo >&2 "An empty or uninitialized MariaDB volume is detected in $MYSQL_DATA_DIR"
    echo >&2 'Installing MariaDB ...'
    echo >&2 ''

    # Create the MYSQL_DATA_DIR and give full access to mysql user.
    mkdir -p "$MYSQL_DATA_DIR"
    chown -R mysql:mysql "$MYSQL_DATA_DIR"

    # By default, use the root password defined by the user
    # or use a random password if MYSQL_RANDOM_ROOT_PASSWORD is true
    # or use an empty password if MYSQL_ALLOW_EMPTY_PASSWORD is true
    if [ -z "$MYSQL_ROOT_PASSWORD" ]; then
        # random password
        if [ "$MYSQL_RANDOM_ROOT_PASSWORD" = 'true' ]; then
            MYSQL_ROOT_PASSWORD="$(date +%s | sha256sum | md5sum | base64 | head -c 16)"
            echo >&2 "GENERATED ROOT PASSWORD: $MYSQL_ROOT_PASSWORD"
        # Empty password
        elif [ "$MYSQL_ALLOW_EMPTY_PASSWORD" = 'true' ]; then
            MYSQL_ROOT_PASSWORD="''"
        fi
    fi

    # It's time to initialize the database
    echo >&2 ''
    echo >&2 'Initializing database ...'
    echo >&2 ''
    mysql_install_db --user=mysql --basedir=/usr --datadir="$MYSQL_DATA_DIR" --rpm --cross-bootstrap "$MYSQL_INSTALL_PARAMS"
    echo >&2 ''
    echo >&2 'Database initialized'
    echo >&2 ''

    # Init file used at startup
    INIT_FILE="/tmp/mariadb-boot.sql"

    # Create root user
    echo "" >| ${INIT_FILE}
    echo "DELETE FROM mysql.user;" >> ${INIT_FILE}
    echo "CREATE USER 'root'@'%' IDENTIFIED BY '${MYSQL_ROOT_PASSWORD}';" >> ${INIT_FILE}
    echo "GRANT ALL ON *.* TO 'root'@'%' WITH GRANT OPTION;" >> ${INIT_FILE}
    echo "DROP DATABASE IF EXISTS test;" >> ${INIT_FILE}
    echo "FLUSH PRIVILEGES;" >> ${INIT_FILE}

    # Create user database
    if [ -n "${MYSQL_USER}" ] && [ -n "${MYSQL_DATABASE}" ]; then
        echo "CREATE DATABASE IF NOT EXISTS \`${MYSQL_DATABASE}\`;" >> ${INIT_FILE}
        echo "GRANT ALL PRIVILEGES ON \`${MYSQL_DATABASE}\`.* TO '${MYSQL_USER}'@'%' IDENTIFIED BY '${MYSQL_PASSWORD}';" >> ${INIT_FILE}
        echo "FLUSH PRIVILEGES;" >> ${INIT_FILE}
    fi

    # Create user database
    if [ -n "${MYSQL_USER}" ] && [ -z "${MYSQL_DATABASE}" ]; then
        echo "CREATE DATABASE IF NOT EXISTS \`${MYSQL_USER}\`;" >> ${INIT_FILE}
        echo "GRANT ALL PRIVILEGES ON \`${MYSQL_USER}\`.* TO '${MYSQL_USER}'@'%' IDENTIFIED BY '${MYSQL_PASSWORD}';" >> ${INIT_FILE}
        echo "FLUSH PRIVILEGES;" >> ${INIT_FILE}
    fi

    MYSQL_STARTCMD="${MYSQL_STARTCMD} --init-file=${INIT_FILE}"

fi

# Make sure the backup file can be excuted
chmod +x /etc/service.d/mariadb/backup

# Let's go and start MariaDB
echo >&2 ''
echo >&2 'Starting MariaDB'
echo >&2 ''
exec su-exec mysql ${MYSQL_STARTCMD} --user=mysql ${MYSQL_STARTPARAMS}

# This exit code will be sent as the first parameter to the finish script
exit 1
